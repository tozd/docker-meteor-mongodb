# You can mount a volume (file) into this location to provide a script which sets environment variables.
[ -f /etc/service/mongod/run.config ] && source /etc/service/mongod/run.config

if [ ! -f /var/lib/mongodb/.replset_initialized ]; then
  touch /var/lib/mongodb/.replset_initialized

  echo "  mmapv1:" >> /var/lib/mongodb/mongodb.conf
  echo "    preallocDataFiles: true" >> /var/lib/mongodb/mongodb.conf
  echo "    smallFiles: true" >> /var/lib/mongodb/mongodb.conf
  echo "replication:" >> /var/lib/mongodb/mongodb.conf
  echo "  oplogSizeMB: 128" >> /var/lib/mongodb/mongodb.conf
  echo "  replSetName: meteor" >> /var/lib/mongodb/mongodb.conf

  # Temporarily start MongoDB to initialize the replica set.
  chpst -u mongodb:mongodb /usr/bin/mongod --config /var/lib/mongodb/mongodb.conf --bind_ip 127.0.0.1 &
  MONGODB_PID=$!
  while true; do
    { echo 'db.runCommand({ ping: 1 })' | mongo --quiet >/dev/null; } && break
    sleep 1
  done

  echo 'rs.initiate({_id: "meteor", members: [{_id: 0, host: "127.0.0.1:27017"}]})' | mongo --quiet
  echo 'while (!db.isMaster().ismaster) { sleep(100); }' | mongo --quiet

  # Configure user authentication.
  if [[ -n "${MONGODB_CREATE_PWD}" && -n "${MONGODB_ADMIN_PWD}" && -n "${MONGODB_OPLOGGER_PWD}" ]]; then
    echo "db.createUser({user: \"admin\", pwd: \"${MONGODB_ADMIN_PWD}\", roles: [\"root\"]})" | mongo --quiet admin
    echo "db.createUser({user: \"meteor\", pwd: \"${MONGODB_CREATE_PWD}\", roles: [\"readWrite\"]})" | mongo --quiet meteor
    echo "db.createUser({user: \"oplogger\", pwd: \"${MONGODB_OPLOGGER_PWD}\", roles: [{role: \"read\", db: \"local\"}]})" | mongo --quiet admin
    echo "security:" >> /var/lib/mongodb/mongodb.conf
    echo "  authorization: \"enabled\"" >> /var/lib/mongodb/mongodb.conf

    export MONGODB_ADMIN_PWD=
    export MONGODB_CREATE_PWD=
    export MONGODB_OPLOGGER_PWD=
  fi

  echo 'db.shutdownServer({force: true})' | mongo --quiet admin
  wait ${MONGODB_PID}
fi
